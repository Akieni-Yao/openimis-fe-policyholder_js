{
  "policyHolder.menu.policyHolders": "Policy Holders",
  "policyHolder.policyHolders.page.title": "Policy Holders",
  "policyHolder.policyHolder": "Policy Holder",
  "policyHolder.code": "Code CAMU",
  "policyHolder.codeTaken": "Policy holder code already exists",
  "policyHolder.tradeName": "Trade Name",
  "policyHolder.mandatoryField.error": "This field is mandatory",
  "policyHolder.displayName": "Display name",
  "policyHolder.location": "Location",
  "policyHolder.legalForm": "Legal Form",
  "policyHolder.employerName": "Employer Name",
  "policyHolder.activityCode": "Activity Code",
  "policyHolder.dateValidFrom": "Created From",
  "policyHolder.dateValidTo": "Date Valid To",
  "policyHolder.isDeleted": "Show deleted",
  "policyHolder.policyHolders.searcher.results.title": "{policyHoldersTotalCount} Policy Holders Found",
  "policyHolder.any": "Any",
  "policyHolder.emptyLabel": " ",
  "policyHolder.delete": "Delete",
  "policyHolder.edit": "Edit",
  "policyHolder.replace": "Replace",
  "policyHolder.update": "Update",
  "policyHolder.createButton.tooltip": "Create new Policy Holder",
  "policyHolder.editButton.tooltip": "Edit",
  "policyHolder.replaceButton.tooltip": "Replace",
  "policyHolder.deleteButton.tooltip": "Delete",
  "policyHolder.policyHolder.page.title": "Policy Holder {label}",
  "policyHolder.generalInfoPanel.title": "General Information",
  "policyHolder.address": "Address",
  "policyHolder.phone": "Phone",
  "policyHolder.fax": "Fax",
  "policyHolder.email": "Email",
  "policyHolder.contactName": "Contact Name",
  "policyHolder.accountancyAccount": "Accountancy Account",
  "policyHolder.mainActivity": "Main Activity",
  "policyHolder.nbEmployees": "Number of Employees",
  "policyHolder.bank": "Bank Name",
  "policyHolder.bankCode": "Bank Code",
  "policyHolder.bankLockerCode": "Bank Locker Code",
  "policyHolder.bankAccountNb": "Bank Account Number",
  "policyHolder.bankKey": "RIB Key",
  "policyHolder.paymentReference": "Payment Reference",
  "policyHolder.name": "Name",
  "policyHolder.contributionPlanBundle": "Contribution Plan Bundle",
  "policyHolder.contributionPlanBundle.label": "Contribution Plan Bundles",
  "policyHolder.calculation": "Calculation Parameter",
  "policyHolder.insureeCHFID": "Insuree No.",
  "policyHolder.CreatePolicyHolder.mutationLabel": "Create Policy Holder - {label}",
  "policyHolder.UpdatePolicyHolder.mutationLabel": "Update Policy Holder - {label}",
  "policyHolder.DeletePolicyHolder.mutationLabel": "Delete Policy Holder - {code} - {tradeName}",
  "policyHolder.mandatoryFieldsEmptyError": "* These fields are required",
  "policyHolder.savePolicyHolderButton.tooltip.enabled": "Save changes",
  "policyHolder.savePolicyHolderButton.tooltip.disabled": "Fill out all required fields. Saving form without any changes not possible.",
  "policyHolder.phoneValidation.regexMsg.en": "Invalid phone number",
  "policyHolder.phoneValidation.regexMsg.fr": "Numéro de téléphone invalide",
  "policyHolder.faxValidation.regexMsg.en": "Invalid fax number",
  "policyHolder.faxValidation.regexMsg.fr": "Numéro de fax invalide",
  "policyHolder.emailValidation.regexMsg.en": "Invalid email",
  "policyHolder.emailValidation.regexMsg.fr": "Couriel invalide",
  "policyHolder.paymentReferenceValidation.regexMsg.en": "Invalid payment reference",
  "policyHolder.paymentReferenceValidation.regexMsg.fr": "Référence de payement invalide",
  "policyHolder.accountancyAccountValidation.regexMsg.en": "Invalid accountancy account",
  "policyHolder.accountancyAccountValidation.regexMsg.fr": "Numéro de compte comptable invalide",
  "policyHolder.deletePolicyHolder.confirm.title": "Delete {code} - {tradeName}?",
  "policyHolder.deletePolicyHolder.confirm.message": "Are you sure you want to delete {code} - {tradeName}?",
  "policyHolder.policyHolderInsuree.tabDisabledError": "To start creating new Policy Holder Insuree, you need to fill in General Information fields and click Save.",
  "policyHolder.policyHolderInsuree.label": "Policy Holder Insurees",
  "policyHolder.policyHolderInsuree.searcher.title": "{policyHolderInsureesTotalCount} Policy Holder Insurees Found",
  "policyHolder.policyHolderException.searcher.title": "{policyHolderInsureesTotalCount} Policy Holder Exception Found",
  "policyHolder.policyHolderInsuree.isDeleted": "Show Deleted Insurees",
  "policyHolder.policyHolderInsuree.createPolicyHolderInsuree": "Add new Policy Holder Insuree",
  "policyHolder.policyHolderInsuree.dialog.edit.title": "Edit Policy Holder Insuree",
  "policyHolder.policyHolderInsuree.dialog.delete.title": "Are you sure you want to delete {otherNames} {lastName}?",
  "policyHolder.policyHolderInsuree.dialog.replace.title": "Add new version of Policy Holder Insuree",
  "policyHolder.dialog.cancel": "Cancel",
  "policyHolder.dialog.create": "Create",
  "policyHolder.dialog.update": "Save",
  "policyHolder.dialog.replace": "Add",
  "policyHolder.dialog.delete.message": "Deleting data does not mean erasing it from openIMIS database. The data will only be deactivated from the viewed list.",
  "policyHolder.CreatePolicyHolderInsuree.mutationLabel": "Create Policy Holder Insuree for {code} - {tradeName}",
  "policyHolder.UpdatePolicyHolderInsuree.mutationLabel": "Update Policy Holder Insuree of {code} - {tradeName}",
  "policyHolder.DeletePolicyHolderInsuree.mutationLabel": "Delete Policy Holder Insuree from {code} - {tradeName}",
  "policyHolder.ReplacePolicyHolderInsuree.mutationLabel": "Replace Policy Holder Insuree of {code} - {tradeName}",
  "policyHolder.policyHolderContributionPlanBundle.isDeleted": "Show Deleted Contribution Plan Bundles",
  "policyHolder.policyHolderContributionPlanBundle.searcher.title": "{policyHolderContributionPlanBundlesTotalCount} Contribution Plan Bundles Found",
  "policyHolder.policyHolderContributionPlanBundle.any": "Any",
  "policyHolder.policyHolderContributionPlanBundle.createPolicyHolderContributionPlanBundle": "Add new Contribution Plan Bundle",
  "policyHolder.CreatePolicyHolderContributionPlanBundle.mutationLabel": "Create Contribution Plan Bundle for {code} - {tradeName}",
  "policyHolder.UpdatePolicyHolderContributionPlanBundle.mutationLabel": "Update Contribution Plan Bundle of {code} - {tradeName}",
  "policyHolder.DeletePolicyHolderContributionPlanBundle.mutationLabel": "Delete Contribution Plan Bundle from {code} - {tradeName}",
  "policyHolder.ReplacePolicyHolderContributionPlanBundle.mutationLabel": "Replace Contribution Plan Bundle of {code} - {tradeName}",
  "policyHolder.policyHolderContributionPlanBundle.dialog.edit.title": "Edit Contribution Plan Bundle",
  "policyHolder.policyHolderContributionPlanBundle.dialog.delete.title": "Are you sure you want to delete {code} - {name}?",
  "policyHolder.policyHolderContributionPlanBundle.dialog.replace.title": "Add new version of Contribution Plan Bundle",
  "policyHolder.menu.policyHolderUsers": "Policy Holder Users",
  "policyHolder.policyHolderUser.userName": "User Name",
  "policyHolder.policyHolderUser.dateValidFrom": "Date Valid From",
  "policyHolder.policyHolderUser.dateValidTo": "Date Valid To",
  "policyHolder.policyHolderUser.isDeleted": "Show Deleted Users",
  "policyHolder.policyHolderUser.searcher.results.title": "{policyHolderUsersTotalCount} Policy Holder Users Found",
  "policyHolder.policyHolderUser.createPolicyHolderUser": "Add new Policy Holder User",
  "policyHolder.CreatePolicyHolderUser.mutationLabel": "{user} is added on {policyHolder}",
  "policyHolder.policyHolderUser.dialog.update.title": "Edit Policy Holder User",
  "policyHolder.UpdatePolicyHolderUser.mutationLabel": "{user} - {policyHolder} is updated",
  "policyHolder.policyHolderUser.dialog.delete.title": "Are you sure you want to delete {user}?",
  "policyHolder.DeletePolicyHolderUser.mutationLabel": "{user} is removed from {policyHolder}",
  "policyHolder.policyHolderUser.dialog.replace.title": "Add new version of Policy Holder User",
  "policyHolder.ReplacePolicyHolderUser.mutationLabel": "{newUser} is replacing {oldUser} on {policyHolder}",
  "policyHolder.mainmenu": "Policy Holder",
  "policyHolder.CreatePolicyHolder.snackbar": "The registration has been successfully completed",
  "policyHolder.createdAt": "Created At",
  "policyHolder.policyHolderInsuree.import": "Import from Excel",
  "policyHolder.policyHolder.import": "Import from Excel",
  "policyHolder.tradeNameValidation.regexMsg.en": "Invalid Trade Name",
  "policyHolder.mainActivityValidation.regexMsg.en": "Invalid Main Activity",
  "policyHolder.contactNameValidation.regexMsg.en": "Invalid Contact Name",
  "policyHolder.shortNameValidation.regexMsg.en": "Invalid ShortName",
  "policyHolder.niuValidation.regexMsg.en": "Invalid NIU",
  "policyHolder.rccmValidation.regexMsg.en": "Invalid RCCM",
  "policyHolder.addressValidation.regexMsg.en": "Invalid Address",
  "policyHolder.bankValidation.regexMsg.en": "Invalid Bank",
  "policyHolder.rbiValidation.regexMsg.en": "Invalid RBI",
  "policyHolder.bankAccountNbValidation.regexMsg.en": "Invalid Bank Account Number",
  "policyHolder.bankCodeValidation.regexMsg.en": "Invalid Bank Code",
  "policyHolder.nbEmployeesValidation.regexMsg.en": "Pleae Fill Numeric Value",
  "policyHolder.policyHolderInsuree.downloadsample": "Download Sample",
  "policyHolder.policyHolderInsuree.downloadInsuree": "Download Insuree",
  "policyHolder.print": "Print",
  "policyHolder.menu.declaration": "Declaration Report",
  "policyHolder.declarationFilter.declared": "Declared",
  "policyHolder.declarationFilter.notDeclared": "Not-Declared",
  "policyHolder.declarationFilter.fromMonth": "From Month",
  "policyHolder.declarationFilter.toMonth": "To Month",
  "policyHolder.declarationFilter.camuCode": "CAMU Code",
  "policyHolder.declarationFilter.search": "Search",
  "policyHolder.declarationFilter.clear": "Clear",
  "policyHolder.declarationDownload.tooltip": "Download Declaration Report",
  "policyHolder.menu.paymentForApproval": "Payments for Approval",
  "policyHolder.rights.exception.title": "Exception Configuration",
  "policyHolder.rights.exception.applyException": "Apply Exception",
  "policyHolder.payment.code": "Payment Code",
  "policyHolder.legalStatus": "Legal Form",
  "policyHolder.policyHolder.sample_insureess_data.xlsx": "policyholder_insurees.xlsx",
  "exception.exceptionInsuree.label": "Insurees Exceptions",
  "exception.exceptionInsureeApproval.label": "Insurees Exceptions Approval",
  "exception.camuNo": "CAMU No.",
  "exception.firstName": "First Name",
  "exception.lastName": "Last Name",
  "exception.department": "Department",
  "exception.city": "City",
  "policyHolder.exceptionInsuree.noData": "No Data Found.Exception list of insurees will be displayed here",
  "policyHolder.exceptionPolicyHolder.noData": "No Data Found.Exception list of policy holders will be displayed here",
  "exception.addException": "Add Exception",
  "policyHolder.exceptionReason": "Exception Reason",
  "policyHolder.exceptionReason.null": "None",
  "policyHolder.exceptionReason.death_of_head_insuree": "Death of Head Insuree",
  "policyHolder.exceptionReason.not_able_to_pay": "Unable to make a payment right now",
  "policyHolder.insureeexceptionReason.null": "None",
  "policyHolder.insureeexceptionReason.death_of_head_insuree": "Death of Head Insuree",
  "policyHolder.insureeexceptionReason.Loss_of_Job": "Loss of Job",
  "exception.exceptionPolicyholder.label": "Policy Holders Exceptions",
  "exception.exceptionPolicyholderApproval.label": "Policy Holders Exceptions Approval",
  "policyHolder.exceptionInsuree.searcher.title": "{policyHolderInsureesTotalCount}  Insurees Found",
  "policyHolder.exception.camuCode": "CAMU Code",
  "exception.bithDate": "Birth Date",
  "exception.phone": "Phone",
  "exception.exceptionType": "Exception Type",
  "exception.exceptionStatus": "Exception Status",
  "exception.date": "Exception Start Date",
  "exception.enddate": "Exception End Date",
  "exception.exceptionMonth": "Exception Month",
  "policyHolder.exception.exceptionMonth.null": " ",
  "policyHolder.exception.exceptionMonth.3": "3",
  "policyHolder.exception.exceptionMonth.6": "6",
  "policyHolder.Exception Status.PENDING": "Pending",
  "policyHolder.Exception Status.APPROVED": "Approved",
  "policyHolder.Exception Status.REJECTED": "Rejected",
  "policyHolder.dialog.rejectTitle": "Insuree Exception Rejection",
  "policyHolder.dialog.portalrejectTitle": "Policyholder Portal Rejection",
  "policyHolder.dialog.approvedTitle": "Insuree Exception Approval",
  "policyHolder.dialog.portalapprovedTitle": "PolicyHolder Portal Approval",
  "policyHolder.policyHolder.ApprovalMsg": "Are you sure, you want to approve the Exception - {paymentCode}? ",
  "policyHolder.policyHolder.portalApprovalMsg": "Are you sure, you want to approve the Portal Request - {paymentCode}? ",
  "policyHolder.button.approved": "Yes,Approve",
  "policyHolder.button.reject": "Reject",
  "policyHolder.snackbar.approve": "Exception is approved successfully!",
  "policyHolder.snackbar.reject": "Exception is rejected successfully!",
  "policyHolder.snackbar.Portalreject": "Portal request is rejected successfully!",
  "policyHolder.snackbar.Portalapprove": "Portal request is approved successfully!",
  "policyHolder.snackbar.ReworkPortalreject": "Portal request is on hold and sent for rework",
  "policyHolder.snackbar.ReworkPortalapprove": "Portal request is on hold and sent for rework successfully!",
  "policyHolder.dialog.rejectTitlePolicyholder": "Policyholder Exception Rejection",
  "policyHolder.dialog.approvedTitlePolicyholder": "Policyholder Exception Approval",
  "policyHolder.snackbar.create": "Exception is created successfully!",
  "policyholder.policyholder.SelectValidOption": "Select Valid Option",
  "policyholder.policyholder.SelectValidOption.null": " ",
  "policyholder.policyHolder.SelectValidOption.not_clear_docs": "Documents are not clear",
  "policyHolder.policyholder.SelectValidOption.not_valid": "Documents is not valid",
  "payment.payment.rejectComment": "Please Select the comments",
  "policyHolder.insureeexceptionReason": "Exception Reason",
  "policyHolder.CreatePolicyHolder.PolicyHolder's contribution plan periodicity should be 1.": "PolicyHolder's contribution plan periodicity should be 1",
  "policyHolder.CreatePolicyHolder.Payment already done for all contracts.": "Payment already done for all contracts.",
  "policyHolder.InsureeExceptionError.Insuree is not active or approved.": "Insuree is not active or approved.",
  "policyHolder.ExceptionMonth": "Exception Month",
  "exception.month": "Exception Month",
  "policyholder.policyholder.error": "Inusree Status is already End of Life",
  "policyHolder.Request Status.Pending": "Pending",
  "policyHolder.Request Status.Approved": "Approved",
  "policyHolder.Request Status.Rejected": "Rejected",
  "policyHolder.Request Status.Rework": "Sent for Rework",
  "policyHolder.Request Status": "Request Status",
  "policyHolder.Request No.": "Request No.",
  "policyHolder.shortName": "Short Name",
  "policyholder.status": "Status",
  "policyholder.rejectComment": "Reason For Rework",
  "policyHolder.policyHolder.rejectComment": "Select Vaild Reason",
  "policyHolder.policyHolder.rejectComment.null": " ",
  "policyHolder.policyHolder.rejectComment.not_clear_docs": "Documents are not clear",
  "policyHolder.policyHolder.rejectComment.not_valid": "Documents is not valid",
  "policyHolder.policyHolder.requeststatus.Pending": "Pending",
  "policyHolder.policyHolder.requeststatus.Approved": "Approved",
  "policyHolder.policyHolder.requeststatus.Rejected": "Rejected",
  "policyHolder.policyHolder.requeststatus.Rework": "Sent for Rework",
  "policyHolder.policyHolder.requeststatus.Created": "Created",
  "policyHolder.dialog.RequestMissingInformation": "Request Missing Information",
  "policyHolder.button.SendRequest": "Send Request",
  "policyholder.DocumentName": "Document Name",
  "policyholder.ViewDocuments": "View Documents",
  "menu.newPolicyHolder": "New PolicyHolder Requests",
  "policyHolder.policyHolder.unlockPage.title": "Policy Holder Details",
  "policyholder.unpdaidDeclaration.title": "Unpaid Declaration",
  "policyholder.action": "Action",
  "policyholder.appliedPenalties.title": "Applied Penalties",
  "policyholder.openSanction.title": "Open Sanction",
  "policyholder.openSanction.btn": "Pay",
  "policyholder.openSanction.paidStatus": "Paid"
}
